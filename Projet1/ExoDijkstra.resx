<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>